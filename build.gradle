/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.2/samples
 */

plugins {
    id "com.bmuschko.docker-remote-api" version "7.1.0"
}

import org.apache.tools.ant.taskdefs.condition.Os
import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

task createDockerfile(type: Dockerfile) {
    from 'node:latest'
    defaultCommand('/bin/bash', '-c', "apt-get update && apt-get install -y zip && mkdir -p /nodejs && npm config set prefix /nodejs/bin && npm install -g aws-cdk && pushd /nodejs/bin && zip -r --symlinks /opt/aws-cdk.zip *")
    doLast {
        println 'Dockerfile creation in <rootdir>/build/docker... OK!'
    }
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    images.add('lambda-layer-cdk:latest')
    doLast {
        println 'Docker image lambda-layer-cdk:latest build... OK!'
    }
}

ext.maybeConvertWindowsPath = { path ->
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        path = "/${path.replace("\\", "/").replace(":", "")}"
    }
    return path
}

task createDockerContainer(type: DockerCreateContainer) {
    def dockerBindDir = new File(buildDir, "layer")
    dockerBindDir.mkdirs()
    dependsOn buildDockerImage
    targetImageId buildDockerImage.getImageId()
    hostConfig.autoRemove = true
    hostConfig.binds = ["${maybeConvertWindowsPath(buildDir.toString())}/layer" : "/opt"]
    doLast {
        println 'Docker container based on lambda-layer-cdk:latest build... OK!'
    }
}

task startDockerContainer(type: DockerStartContainer) {
    dependsOn createDockerContainer
    targetContainerId createDockerContainer.getContainerId()
    doLast {
        println 'Docker container starting... OK!'
    }
}

task exportLambdaLayerZip(type: DockerWaitContainer) {
    dependsOn startDockerContainer
    targetContainerId createDockerContainer.getContainerId()
    doLast {
        println 'Docker container export lambda-layer-cdk... OK!'
    }
}